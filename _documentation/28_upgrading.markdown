---
layout: doc
title: "Обновление"
description: "Обновление сайта на Jekyll."
prism: yes
---
# Обновление

Как обновить старую версию Jekyll? Некоторые вещи поменялись со времени версии 1.0 и вам стоит узнать об этом.

Для начала установите последнюю версию Jekyll на компьютер:

```bash
$ gem update jekyll
```

###### Простой вариант
***Хотите быстро создать новый сайт на Jekyll? Просто выполните команду `jekyll new SITENAME`, чтобы создать новый каталог с заготовкой сайта***

### Команда Jekyll

Для ясности - Jekyll принимает команды `build ` и`serve`. Если раньше вы просто запускали команду `Jekyll` для генерации сайта и `jekyll --server` для локального предпросмотра сайта, то с версии 2.0 вы используете для этого субкоманды `jekyll build` и `jekyll serve`.

###### Локальный сервер
***С новыми субкомандами предпросмотр локальных сайтов немного изменился. Вместо задания  в конфигурации ` server: true` используйте `jekyll serve`. То же относится и к `watch: true` используйте флаг `--watch`  с `jekyll serve` или  `jekyll build`***

### Абсолютные пермалинки

В Jekyll v1.0 впервые появились абсолютные пермалинки для страниц в подкаталогах. Начиная с версии 2.0, абсолютные пермалинки стали дефолтными вместо относительных. Обратная совместимость относительных пермалинков будет удалена в версии 3.0.

### Черновики

В Jekyll есть возможность создания черновиков с локальным предпросмотром. Для создания черновика просто создайте каталог `_drafts` в основном каталоге сайта и добавьте туда новый файл с разметкой. Для предпросмотра черновиков просто выполните `jekyll serve` с флагом `--drafts`.

###### У черновиков нет дат
***В отличие от постов, черновики не датируются, так как они не опубликованы. Поэтому вместо стандартного именования `2013-07-01-my-draft-post.md` именуйте черновики просто по названию поста `my-draft-post.md`***

### Кастомный файл конфигурации

Вместо задания индивидуальных флагов при запуске вы можете передать целый кастомный файл с конфигурацией. Это упрощает разделение между окружениями и позволяет вам программно переопределять умолчания. Просто добавьте флаг `--config` к команде `jekyll` и путь к одному или нескольким конфигурационным файлам.

Соответственно, следующие старые флаги командной строки сейчас запрещены:

Permalink

* `--no-server`
* `--no-auto` (сейчас `--no-watch`)
* `--auto` (сейчас `--watch`)
* `--server`
* `--url=`
* `--maruku`, `--rdiscount` и `--redcarpet`
* `--pygments`
* `--permalink=`
* `--paginate`

###### Флаг `--config` явно указывает конфигурационный файл
***Если вы используете флаг `--config`, Jekyll будет игнорировать ваш файл `_config.yml`. Хотите совместить кастомную конфигурацию с обычной? Не проблема, Jekyll принимает больше одного файла при конфигурации в командной строке. Файлы конфигурации каскадируются справа налево, поэтому команда `jekyll serve --config _config.yml,_config-dev.yml`  позволит файлу `_config-dev.yml` переписать настройки `_config.yml`, когда они содержат один ключ***

### Новые опции конфигурационного файла

В Jekyll 1.0 представлено несколько новых опций конфигурационного файла. Перед обновлением проверьте, присутствуют ли они в вашем старом файле конфигурации  и если да, убедитесь, что вы используете их правильно:

* `excerpt_separator`
* `host`
* `include`
* `keep_files`
* `layouts`
* `show_drafts`
* `timezone`
* `url`

### Базовый URL

У многих возникает желание запускать сайт на Jekyll в различных местах, например локально просматривать перед развертыванием на GitHub Pages. Jekyll 1.0 облегчает это с новым флагом `--baseurl`. Чтобы использовать преимущества этой фичи, сначала добавьте `baseurl` продакшен-версии вашего сайта в `_config.yml`. Затем на всем сайте добавьте относительный URL префикс {% raw %}{{ site.baseurl }}{% endraw %}. А для локального предпросмотра передайте `--baseurl` с локальным базовым URL (обычно это `/`) команде `jekyll serve`  и все ваши ссылки будут работать правильно в обоих окружениях.

##### !!Все URL страниц и постов содержат открывающий слэш
***Если вы используете метод, указанный выше, запомните, что все URL страниц и постов содержат открывающий слэш. А значит, конкатенация базового URL c URL поста, где `site.baseurl = /` и `post.url = /2013/06/05/my-fun-post/` даст в результате два открывающих слэша, что поломает ссылки. Таким образом предполагается, что префикс `site.baseurl` используется тогда, когда `baseurl` отличается от дефолтного `/`.***
