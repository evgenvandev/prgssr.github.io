---
layout: doc
title: "Ресурсы"
description: "Использование Sass и CoffeeScript в Jekyll."
prism: yes
---
# Ресурсы

В Jekyll  есть встроенная поддержка  Sass и CoffeeScript. Для их использования создайте файл с правильным расширением ( `.sass`, `.scss` или `.coffee` соответственно) ,начинающийся с двух рядов из трех тире, как на примере:

```
---
---

// start content
.my-definition
  font-size: 1.2em
```

Jekyll  обрабатывает такие файлы как обычные страницы, помещая их в тот же каталог, где они и находились Например, файл `css/styles.scss` в исходном каталоге после обработки будет помещен в каталоге назначения как  `css/styles.scss`.

###### Jekyll обрабатывает все теги и фильтры Liquid в файлах с ресурсами
***Если вы используете [Mustache](http://mustache.github.io/) или иной шаблонизатор JavaScript, конфликтующий с [синтаксисом Liquid](/documentation/17_templates.html), вам надо обернуть свой код тегами `{% raw %}` и `{% endraw %}`.

### Sass/SCSS

Jekyll  позволяет вам настроить обработку файлов SASS.

Поместите все фрагменты в `sass_dir` (по умолчанию это `<source>/_sass`). Поместите ваши основные файлы Sass/SCSS в тот  каталог, в котором вы хотите видеть итоговый результат, например,  `<source>/css` (больше примеров, найти в [списке сайтов Jekyll, использующих Sass](https://github.com/jekyll/jekyll-sass-converter/tree/master/example)). 

Если вы используете `@import`, вам нужно задать в качестве каталога `sass_dir` базовый каталог с вашими файлами Sass. Вы можете сделать это таким образом:

```yaml
sass:
    sass_dir: _sass
```

Конвертер Sass получит в качестве значения по умолчанию для `sass_dir`  значение  `_sass`.

###### `sass_dir` используется только Sass
***Обратите внимание, что `sass_dir` это путь для импортирования в Sass и ничего больше. Это значит, что Jekyll не знает об этих файлах напрямую, поэтому эти файлы могут обходиться без вводной YAML, поскольку они не обрабатываются. Этот каталог должен содержать только файлы для импортирования***

Вы также можете определить стиль выходящего CSS в файле `_config.yml`:

```yaml
sass:
    style: :compressed
```

Это передается в Sass, поэтому все поддерживаемые опции вывода в Sass будут валидны.
